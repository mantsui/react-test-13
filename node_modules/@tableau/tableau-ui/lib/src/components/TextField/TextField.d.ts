import * as React from 'react';
import { InputAttrs } from '../../utils/NativeProps';
export interface TextFieldProps extends InputAttrs {
    /** NOTE: applied to the root `<div>`, not the `<input>`. */
    className?: string;
    /** Optional error message to display under the field. When truthy, the field will have error styling. */
    errorMessage?: string;
    /** NOTE: applied to the root `<div>`, not the `<input>`. */
    id?: string;
    /**
     * * `"line"` shows a comparatively lightweight bottom-only border
     * * `"outline"` shows a border around the entire field
     * * `"search"` shows like 'outline', but with a search icon and without the green focus color
     *
     * NOTE: `'line'` TextFields pass `label` as `placeholder` prop to the `<input>` when unfocused or `value` is falsy.
     * @default '"outline"'
     */
    kind?: 'line' | 'outline' | 'search';
    /** Optional label to display above the field. Passed as `placeholder` prop to the `<input>` if `placeholder` is falsy. */
    label?: string;
    /** Called when the user indicates to clear the text of the field. */
    onClear?: () => void;
    /** Passed as `placeholder` prop to the `<input>`. */
    placeholder?: string;
    /** NOTE: applied to the root `<div>`, not the `<input>`. */
    style?: React.CSSProperties;
    /**
     * Passed as `type` prop to the `<input>`.
     * @default '"text"'
     */
    type?: 'email' | 'password' | 'text';
    /** Passed as `value` prop to the `<input>`. */
    value?: string;
}
export declare const RootClassName: string;
export declare const InputClassName: string;
/**
 * Props defined in `TextFieldProps` will be used by this component. All other provided props will be passed to the native
 * `<input>` element.
 */
export declare const TextField: React.ForwardRefExoticComponent<TextFieldProps & React.RefAttributes<HTMLInputElement>>;
