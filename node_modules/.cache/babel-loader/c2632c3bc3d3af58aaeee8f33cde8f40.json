{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtsui\\\\Documents\\\\My Github Projects\\\\tableau-ui-test\\\\src\\\\ConfigDialog.js\";\nimport React from 'react';\nimport LineDropdown from './LineDropdown.js';\nimport RadioButton from './RadioButton.js';\nimport { Tabs } from '@tableau/tableau-ui';\nconst _window = window,\n      tableau = _window.tableau;\nlet radioList = ['Yes', 'No'];\nlet list01 = [{\n  value: 'alpha'\n}, {\n  value: 'bravo'\n}, {\n  value: 'charlie'\n}, {\n  value: 'delta'\n}, {\n  value: 'zebra'\n}];\n\nclass ConfigDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sheetList: []\n    };\n\n    this.initializeSheetFilter = () => {\n      this.configuration = React.createElement(React.Fragment, null, React.createElement(LineDropdown, {\n        listData: this.sheetList,\n        title: \"Please select worksheet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(RadioButton, {\n        radioData: radioList,\n        radioTitle: \"Dollar Sign?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      selectedTabIndex: 0\n    });\n\n    try {\n      tableau.extensions.initializeDialogAsync().then(() => {\n        console.log('Debug: component will mount.');\n        const tableauSettings = tableau.extensions.settings.getAll();\n        const tableauDashboard = tableau.extensions.dashboardContent.dashboard;\n        tableauDashboard.worksheets.forEach(function (worksheet) {//this.sheetList.push(worksheet.name);\n        });\n        console.log('Debug tableauSettings: ', tableauSettings); //console.log('Debug sheetList: ', sheetList);\n\n        console.log('Debug tableauDashboard: ', tableauDashboard);\n      });\n    } catch (err) {\n      console.log('window.tableau.extensions did not load');\n    }\n  }\n\n  componentDidMount() {\n    console.log('Debug: component did mount');\n    /*if (this.sheetList.length < 1) {\r\n        this.setState({ sheetList: ['Tab Superstore Data', 'Tabulated Data US Census'] })\r\n    }*/\n\n    console.log('sheetList: ', this.sheetList);\n  }\n\n  getWorksheetList() {\n    console.log('Running getWorksheetList function.');\n  }\n\n  render() {\n    {\n      /*const configuration = <>\r\n         <LineDropdown listData={this.sheetList} title='Please select worksheet' /><br/><br/>\r\n         <RadioButton radioData={radioList} radioTitle='Dollar Sign?'/>\r\n         </>;*/\n    }\n    const options = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Test options\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Test options2\"));\n    const formatting = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Test formatting\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Test formatting2\"));\n    const panels = [configuration, options, formatting];\n    const tabs = [{\n      content: 'Extension Config'\n    }, {\n      content: 'Optional Features'\n    }, {\n      content: 'Source / Attribution'\n    }];\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Tableau Extension D3 Sankey Diagram ConfigDialog.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Tabs, {\n      activation: \"manual\",\n      alignment: \"left\",\n      onTabChange: index => {\n        console.log(\"onChange: \".concat(index));\n        this.setState({\n          selectedTabIndex: index\n        });\n      },\n      selectedTabIndex: this.state.selectedTabIndex,\n      tabs: tabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, panels[this.state.selectedTabIndex]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ConfigDialog;","map":{"version":3,"sources":["C:\\Users\\mtsui\\Documents\\My Github Projects\\tableau-ui-test\\src\\ConfigDialog.js"],"names":["React","LineDropdown","RadioButton","Tabs","window","tableau","radioList","list01","value","ConfigDialog","Component","state","sheetList","initializeSheetFilter","configuration","componentWillMount","setState","selectedTabIndex","extensions","initializeDialogAsync","then","console","log","tableauSettings","settings","getAll","tableauDashboard","dashboardContent","dashboard","worksheets","forEach","worksheet","err","componentDidMount","getWorksheetList","render","options","formatting","panels","tabs","content","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport LineDropdown from './LineDropdown.js'\r\nimport RadioButton from './RadioButton.js'\r\nimport { Tabs } from '@tableau/tableau-ui'\r\n\r\nconst { tableau } = window;\r\n\r\nlet radioList = ['Yes', 'No'];\r\n\r\nlet list01 = [\r\n    { value: 'alpha'},\r\n    { value: 'bravo'},\r\n    { value: 'charlie'},\r\n    { value: 'delta'},\r\n    { value: 'zebra'}\r\n];\r\n\r\n\r\nclass ConfigDialog extends React.Component {\r\n\r\n    state = { \r\n        sheetList: []\r\n    }    \r\n\r\n    componentWillMount() {\r\n        this.setState({ selectedTabIndex: 0 });\r\n\r\n        try{\r\n            tableau.extensions.initializeDialogAsync().then(() => {\r\n                console.log('Debug: component will mount.');\r\n                const tableauSettings = tableau.extensions.settings.getAll();\r\n                const tableauDashboard = tableau.extensions.dashboardContent.dashboard;\r\n\r\n                tableauDashboard.worksheets.forEach(function (worksheet) {\r\n                    //this.sheetList.push(worksheet.name);\r\n                });\r\n\r\n                console.log('Debug tableauSettings: ', tableauSettings);\r\n                //console.log('Debug sheetList: ', sheetList);\r\n                console.log('Debug tableauDashboard: ', tableauDashboard);\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log('window.tableau.extensions did not load');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Debug: component did mount');\r\n        /*if (this.sheetList.length < 1) {\r\n            this.setState({ sheetList: ['Tab Superstore Data', 'Tabulated Data US Census'] })\r\n        }*/\r\n        console.log('sheetList: ', this.sheetList);\r\n    }\r\n\r\n    getWorksheetList(){\r\n        console.log('Running getWorksheetList function.');\r\n    }\r\n\r\n    initializeSheetFilter = () => {\r\n        this.configuration = <>\r\n            <LineDropdown listData={this.sheetList} title='Please select worksheet' /><br/><br/>\r\n            <RadioButton radioData={radioList} radioTitle='Dollar Sign?'/>\r\n            </>\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        {/*const configuration = <>\r\n            <LineDropdown listData={this.sheetList} title='Please select worksheet' /><br/><br/>\r\n            <RadioButton radioData={radioList} radioTitle='Dollar Sign?'/>\r\n            </>;*/}\r\n\r\n        const options = <>\r\n            <span>Test options</span><br/>\r\n            <span>Test options2</span>\r\n            </>;\r\n        const formatting = <>\r\n            <span>Test formatting</span><br/>\r\n            <span>Test formatting2</span>\r\n            </>;\r\n        const panels = [configuration, options, formatting];\r\n\r\n        const tabs = [ { content: 'Extension Config' }, { content: 'Optional Features' }, { content: 'Source / Attribution' } ];\r\n\r\n        return(\r\n            <>\r\n            <h1>Tableau Extension D3 Sankey Diagram ConfigDialog.</h1>\r\n\r\n            <br/>\r\n            <Tabs\r\n            activation='manual'\r\n            alignment='left'\r\n            onTabChange={(index) => {\r\n                console.log(`onChange: ${index}`);\r\n                this.setState({ selectedTabIndex: index });\r\n            }}\r\n            selectedTabIndex={this.state.selectedTabIndex}\r\n            tabs={tabs}\r\n            >\r\n\r\n            {/*<span>{tabs[this.state.selectedTabIndex].content} panel content</span>*/}\r\n            {panels[this.state.selectedTabIndex]}\r\n            </Tabs>\r\n\r\n            <br/>\r\n\r\n            {/*<LineDropdown listData={list01} title='Please select worksheet' />\r\n            <br/>\r\n            <br/>\r\n            <RadioButton radioData={radioList} radioTitle='Dollar Sign?'/>*/}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfigDialog\r\n\r\n"]},"metadata":{},"sourceType":"module"}