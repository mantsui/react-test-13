{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtsui\\\\Documents\\\\My Github Projects\\\\tableau-ui-test\\\\src\\\\ConfigDialog.js\";\nimport React from 'react';\nimport LineDropdown from './LineDropdown.js';\nimport RadioButton from './RadioButton.js';\nimport { Tabs } from '@tableau/tableau-ui';\nlet radioList = ['Yes', 'No'];\nlet list01 = [{\n  value: 'alpha'\n}, {\n  value: 'bravo'\n}, {\n  value: 'charlie'\n}, {\n  value: 'delta'\n}, {\n  value: 'zebra'\n}];\nconst configuration = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Test Configuration\"), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Test Configuration2\"), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Test Configuration3\"), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}));\nconst options = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"Test options\"), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Test options2\"));\nconst formatting = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"Test formatting\"), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"Test formatting2\"));\nconst panels = [configuration, options, formatting];\nconst tabs = [{\n  content: 'Extension Config'\n}, {\n  content: 'Optional Features'\n}, {\n  content: 'Source / Attribution'\n}];\n\nclass ConfigDialog extends React.Component {\n  componentWillMount() {\n    this.setState({\n      selectedTabIndex: 0\n    });\n\n    try {\n      window.tableau.extensions.initializeDialogAsync().then(() => {\n        console.log('Debug: component will mount.');\n      });\n    } catch (err) {\n      console.log('window.tableau.extensions did not load');\n    }\n  }\n\n  componentDidMount() {\n    console.log('Debug: component did mount');\n  }\n\n  getWorksheetList() {\n    console.log('Running getWorksheetList function.');\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Tableau Extension D3 Sankey Diagram ConfigDialog.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Tabs, {\n      activation: \"manual\",\n      alignment: \"left\",\n      onTabChange: index => {\n        console.log(\"onChange: \".concat(index));\n        this.setState({\n          selectedTabIndex: index\n        });\n      },\n      selectedTabIndex: this.state.selectedTabIndex,\n      tabs: tabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, panels[this.state.selectedTabIndex]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(RadioButton, {\n      radioData: radioList,\n      radioTitle: \"Dollar Sign?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ConfigDialog;","map":{"version":3,"sources":["C:\\Users\\mtsui\\Documents\\My Github Projects\\tableau-ui-test\\src\\ConfigDialog.js"],"names":["React","LineDropdown","RadioButton","Tabs","radioList","list01","value","configuration","options","formatting","panels","tabs","content","ConfigDialog","Component","componentWillMount","setState","selectedTabIndex","window","tableau","extensions","initializeDialogAsync","then","console","log","err","componentDidMount","getWorksheetList","render","index","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,IAAT,QAAqB,qBAArB;AAEA,IAAIC,SAAS,GAAG,CAAC,KAAD,EAAQ,IAAR,CAAhB;AAEA,IAAIC,MAAM,GAAG,CACT;AAAEC,EAAAA,KAAK,EAAE;AAAT,CADS,EAET;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAFS,EAGT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAHS,EAIT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAJS,EAKT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CALS,CAAb;AASA,MAAMC,aAAa,GAAG,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADjC,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAEkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFlC,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,EAGkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHlC,CAAtB;AAMA,MAAMC,OAAO,GAAG,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAD7B,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAAhB;AAIA,MAAMC,UAAU,GAAG,0CACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADL,EACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADjC,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFL,CAAnB;AAIA,MAAMC,MAAM,GAAG,CAACH,aAAD,EAAgBC,OAAhB,EAAyBC,UAAzB,CAAf;AAEA,MAAME,IAAI,GAAG,CAAE;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAF,EAAmC;AAAEA,EAAAA,OAAO,EAAE;AAAX,CAAnC,EAAqE;AAAEA,EAAAA,OAAO,EAAE;AAAX,CAArE,CAAb;;AAGA,MAAMC,YAAN,SAA2Bb,KAAK,CAACc,SAAjC,CAA2C;AAEvCC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,QAAL,CAAc;AAAEC,MAAAA,gBAAgB,EAAE;AAApB,KAAd;;AAEA,QAAG;AACCC,MAAAA,MAAM,CAACC,OAAP,CAAeC,UAAf,CAA0BC,qBAA1B,GAAkDC,IAAlD,CAAuD,MAAM;AACzDC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,OAFD;AAGH,KAJD,CAKA,OAAMC,GAAN,EAAU;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACH;AACJ;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH;;AAEDG,EAAAA,gBAAgB,GAAE;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,IAAD;AACA,MAAA,UAAU,EAAC,QADX;AAEA,MAAA,SAAS,EAAC,MAFV;AAGA,MAAA,WAAW,EAAGC,KAAD,IAAW;AACpBN,QAAAA,OAAO,CAACC,GAAR,qBAAyBK,KAAzB;AACA,aAAKb,QAAL,CAAc;AAAEC,UAAAA,gBAAgB,EAAEY;AAApB,SAAd;AACH,OAND;AAOA,MAAA,gBAAgB,EAAE,KAAKC,KAAL,CAAWb,gBAP7B;AAQA,MAAA,IAAI,EAAEN,IARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYCD,MAAM,CAAC,KAAKoB,KAAL,CAAWb,gBAAZ,CAZP,CAJA,EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBA,EAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBA,EAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBA,EAwBA,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEb,SAAxB;AAAmC,MAAA,UAAU,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBA,CADJ;AA4BH;;AApDsC;;AAuD3C,eAAeS,YAAf","sourcesContent":["import React from 'react';\r\nimport LineDropdown from './LineDropdown.js'\r\nimport RadioButton from './RadioButton.js'\r\nimport { Tabs } from '@tableau/tableau-ui'\r\n\r\nlet radioList = ['Yes', 'No'];\r\n\r\nlet list01 = [\r\n    { value: 'alpha'},\r\n    { value: 'bravo'},\r\n    { value: 'charlie'},\r\n    { value: 'delta'},\r\n    { value: 'zebra'}\r\n];\r\n\r\n\r\nconst configuration = <>\r\n                        <span>Test Configuration</span><br/>\r\n                        <span>Test Configuration2</span><br/>\r\n                        <span>Test Configuration3</span><br/>\r\n                      </>;\r\n\r\nconst options = <>\r\n                    <span>Test options</span><br/>\r\n                    <span>Test options2</span>\r\n                </>;\r\nconst formatting = <>\r\n                        <span>Test formatting</span><br/>\r\n                        <span>Test formatting2</span>\r\n                   </>;\r\nconst panels = [configuration, options, formatting];\r\n\r\nconst tabs = [ { content: 'Extension Config' }, { content: 'Optional Features' }, { content: 'Source / Attribution' } ];\r\n\r\n\r\nclass ConfigDialog extends React.Component {\r\n\r\n    componentWillMount() {\r\n        this.setState({ selectedTabIndex: 0 });\r\n\r\n        try{\r\n            window.tableau.extensions.initializeDialogAsync().then(() => {\r\n                console.log('Debug: component will mount.');\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log('window.tableau.extensions did not load');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Debug: component did mount');\r\n    }\r\n\r\n    getWorksheetList(){\r\n        console.log('Running getWorksheetList function.');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <h1>Tableau Extension D3 Sankey Diagram ConfigDialog.</h1>\r\n\r\n            <br/>\r\n            <Tabs\r\n            activation='manual'\r\n            alignment='left'\r\n            onTabChange={(index) => {\r\n                console.log(`onChange: ${index}`);\r\n                this.setState({ selectedTabIndex: index });\r\n            }}\r\n            selectedTabIndex={this.state.selectedTabIndex}\r\n            tabs={tabs}\r\n            >\r\n\r\n            {/*<span>{tabs[this.state.selectedTabIndex].content} panel content</span>*/}\r\n            {panels[this.state.selectedTabIndex]}\r\n            </Tabs>\r\n\r\n            <br/>\r\n\r\n            {/*<LineDropdown listData={list01} title='Please select worksheet' />*/}\r\n            <br/>\r\n            <br/>\r\n            <RadioButton radioData={radioList} radioTitle='Dollar Sign?'/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfigDialog\r\n\r\n"]},"metadata":{},"sourceType":"module"}