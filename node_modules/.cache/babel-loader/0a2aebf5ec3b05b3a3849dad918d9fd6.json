{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtsui\\\\Documents\\\\My Github Projects\\\\tableau-ui-test\\\\src\\\\ConfigDialog.js\";\nimport React from 'react';\nimport LineDropdown from './LineDropdown.js';\nimport RadioButton from './RadioButton.js';\nimport { Tabs } from '@tableau/tableau-ui';\nconst _window = window,\n      tableau = _window.tableau;\nlet radioList = ['Yes', 'No'];\nlet list01 = [{\n  value: 'alpha'\n}, {\n  value: 'bravo'\n}, {\n  value: 'charlie'\n}, {\n  value: 'delta'\n}, {\n  value: 'zebra'\n}];\nlet sheetList = [];\nconst configuration = React.createElement(React.Fragment, null, React.createElement(LineDropdown, {\n  listData: sheetList,\n  title: \"Please select worksheet\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(RadioButton, {\n  radioData: radioList,\n  radioTitle: \"Dollar Sign?\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}));\nconst options = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"Test options\"), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"Test options2\"));\nconst formatting = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"Test formatting\"), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"Test formatting2\"));\nconst panels = [configuration, options, formatting];\nconst tabs = [{\n  content: 'Extension Config'\n}, {\n  content: 'Optional Features'\n}, {\n  content: 'Source / Attribution'\n}];\n\nclass ConfigDialog extends React.Component {\n  componentWillMount() {\n    this.setState({\n      selectedTabIndex: 0\n    });\n\n    try {\n      tableau.extensions.initializeDialogAsync().then(() => {\n        console.log('Debug: component will mount.');\n        const tableauSettings = tableau.extensions.settings.getAll();\n        const tableauDashboard = tableau.extensions.dashboardContent.dashboard;\n        tableauDashboard.worksheets.forEach(function (worksheet) {\n          sheetList.push(worksheet.name);\n        });\n        console.log('Debug tableauSettings: ', tableauSettings);\n        console.log('Debug sheetList: ', sheetList);\n        console.log('Debug tableauDashboard: ', tableauDashboard);\n      });\n    } catch (err) {\n      console.log('window.tableau.extensions did not load');\n    }\n  }\n\n  componentDidMount() {\n    console.log('Debug: component did mount');\n\n    if (sheetList.length < 1) {\n      sheetList = ['Tab Superstore Data', 'Tabulated Data US Census'];\n    }\n\n    console.log('sheetList: ', sheetList);\n  }\n\n  getWorksheetList() {\n    console.log('Running getWorksheetList function.');\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Tableau Extension D3 Sankey Diagram ConfigDialog.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Tabs, {\n      activation: \"manual\",\n      alignment: \"left\",\n      onTabChange: index => {\n        console.log(\"onChange: \".concat(index));\n        this.setState({\n          selectedTabIndex: index\n        });\n      },\n      selectedTabIndex: this.state.selectedTabIndex,\n      tabs: tabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, panels[this.state.selectedTabIndex]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ConfigDialog;","map":{"version":3,"sources":["C:\\Users\\mtsui\\Documents\\My Github Projects\\tableau-ui-test\\src\\ConfigDialog.js"],"names":["React","LineDropdown","RadioButton","Tabs","window","tableau","radioList","list01","value","sheetList","configuration","options","formatting","panels","tabs","content","ConfigDialog","Component","componentWillMount","setState","selectedTabIndex","extensions","initializeDialogAsync","then","console","log","tableauSettings","settings","getAll","tableauDashboard","dashboardContent","dashboard","worksheets","forEach","worksheet","push","name","err","componentDidMount","length","getWorksheetList","render","index","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,IAAT,QAAqB,qBAArB;gBAEoBC,M;MAAZC,O,WAAAA,O;AAER,IAAIC,SAAS,GAAG,CAAC,KAAD,EAAQ,IAAR,CAAhB;AAEA,IAAIC,MAAM,GAAG,CACT;AAAEC,EAAAA,KAAK,EAAE;AAAT,CADS,EAET;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAFS,EAGT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAHS,EAIT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAJS,EAKT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CALS,CAAb;AAQA,IAAIC,SAAS,GAAG,EAAhB;AAEA,MAAMC,aAAa,GAAG,0CACE,oBAAC,YAAD;AAAc,EAAA,QAAQ,EAAED,SAAxB;AAAmC,EAAA,KAAK,EAAC,yBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EACuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADvE,EAC4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAD5E,EAEE,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAEH,SAAxB;AAAmC,EAAA,UAAU,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAAtB;AAKA,MAAMK,OAAO,GAAG,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAD7B,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAAhB;AAIA,MAAMC,UAAU,GAAG,0CACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADL,EACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADjC,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFL,CAAnB;AAIA,MAAMC,MAAM,GAAG,CAACH,aAAD,EAAgBC,OAAhB,EAAyBC,UAAzB,CAAf;AAEA,MAAME,IAAI,GAAG,CAAE;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAF,EAAmC;AAAEA,EAAAA,OAAO,EAAE;AAAX,CAAnC,EAAqE;AAAEA,EAAAA,OAAO,EAAE;AAAX,CAArE,CAAb;;AAGA,MAAMC,YAAN,SAA2BhB,KAAK,CAACiB,SAAjC,CAA2C;AAEvCC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,QAAL,CAAc;AAAEC,MAAAA,gBAAgB,EAAE;AAApB,KAAd;;AAEA,QAAG;AACCf,MAAAA,OAAO,CAACgB,UAAR,CAAmBC,qBAAnB,GAA2CC,IAA3C,CAAgD,MAAM;AAClDC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,cAAMC,eAAe,GAAGrB,OAAO,CAACgB,UAAR,CAAmBM,QAAnB,CAA4BC,MAA5B,EAAxB;AACA,cAAMC,gBAAgB,GAAGxB,OAAO,CAACgB,UAAR,CAAmBS,gBAAnB,CAAoCC,SAA7D;AAEAF,QAAAA,gBAAgB,CAACG,UAAjB,CAA4BC,OAA5B,CAAoC,UAAUC,SAAV,EAAqB;AACrDzB,UAAAA,SAAS,CAAC0B,IAAV,CAAeD,SAAS,CAACE,IAAzB;AACH,SAFD;AAIAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCC,eAAvC;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiChB,SAAjC;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCI,gBAAxC;AACH,OAZD;AAaH,KAdD,CAeA,OAAMQ,GAAN,EAAU;AACNb,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACH;AACJ;;AAEDa,EAAAA,iBAAiB,GAAG;AAChBd,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AACA,QAAIhB,SAAS,CAAC8B,MAAV,GAAmB,CAAvB,EAA0B;AACtB9B,MAAAA,SAAS,GAAG,CAAC,qBAAD,EAAwB,0BAAxB,CAAZ;AACH;;AACDe,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BhB,SAA3B;AACH;;AAED+B,EAAAA,gBAAgB,GAAE;AACdhB,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,WACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,IAAD;AACA,MAAA,UAAU,EAAC,QADX;AAEA,MAAA,SAAS,EAAC,MAFV;AAGA,MAAA,WAAW,EAAGC,KAAD,IAAW;AACpBlB,QAAAA,OAAO,CAACC,GAAR,qBAAyBiB,KAAzB;AACA,aAAKvB,QAAL,CAAc;AAAEC,UAAAA,gBAAgB,EAAEsB;AAApB,SAAd;AACH,OAND;AAOA,MAAA,gBAAgB,EAAE,KAAKC,KAAL,CAAWvB,gBAP7B;AAQA,MAAA,IAAI,EAAEN,IARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYCD,MAAM,CAAC,KAAK8B,KAAL,CAAWvB,gBAAZ,CAZP,CAJA,EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBA,CADJ;AA4BH;;AAlEsC;;AAqE3C,eAAeJ,YAAf","sourcesContent":["import React from 'react';\r\nimport LineDropdown from './LineDropdown.js'\r\nimport RadioButton from './RadioButton.js'\r\nimport { Tabs } from '@tableau/tableau-ui'\r\n\r\nconst { tableau } = window;\r\n\r\nlet radioList = ['Yes', 'No'];\r\n\r\nlet list01 = [\r\n    { value: 'alpha'},\r\n    { value: 'bravo'},\r\n    { value: 'charlie'},\r\n    { value: 'delta'},\r\n    { value: 'zebra'}\r\n];\r\n\r\nlet sheetList = [];\r\n\r\nconst configuration = <>\r\n                        <LineDropdown listData={sheetList} title='Please select worksheet' /><br/><br/>\r\n                        <RadioButton radioData={radioList} radioTitle='Dollar Sign?'/>\r\n                      </>;\r\n\r\nconst options = <>\r\n                    <span>Test options</span><br/>\r\n                    <span>Test options2</span>\r\n                </>;\r\nconst formatting = <>\r\n                        <span>Test formatting</span><br/>\r\n                        <span>Test formatting2</span>\r\n                   </>;\r\nconst panels = [configuration, options, formatting];\r\n\r\nconst tabs = [ { content: 'Extension Config' }, { content: 'Optional Features' }, { content: 'Source / Attribution' } ];\r\n\r\n\r\nclass ConfigDialog extends React.Component {\r\n\r\n    componentWillMount() {\r\n        this.setState({ selectedTabIndex: 0 });\r\n\r\n        try{\r\n            tableau.extensions.initializeDialogAsync().then(() => {\r\n                console.log('Debug: component will mount.');\r\n                const tableauSettings = tableau.extensions.settings.getAll();\r\n                const tableauDashboard = tableau.extensions.dashboardContent.dashboard;\r\n\r\n                tableauDashboard.worksheets.forEach(function (worksheet) {\r\n                    sheetList.push(worksheet.name);\r\n                });\r\n\r\n                console.log('Debug tableauSettings: ', tableauSettings);\r\n                console.log('Debug sheetList: ', sheetList);\r\n                console.log('Debug tableauDashboard: ', tableauDashboard);\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log('window.tableau.extensions did not load');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Debug: component did mount');\r\n        if (sheetList.length < 1) {\r\n            sheetList = ['Tab Superstore Data', 'Tabulated Data US Census'];\r\n        }\r\n        console.log('sheetList: ', sheetList);\r\n    }\r\n\r\n    getWorksheetList(){\r\n        console.log('Running getWorksheetList function.');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <h1>Tableau Extension D3 Sankey Diagram ConfigDialog.</h1>\r\n\r\n            <br/>\r\n            <Tabs\r\n            activation='manual'\r\n            alignment='left'\r\n            onTabChange={(index) => {\r\n                console.log(`onChange: ${index}`);\r\n                this.setState({ selectedTabIndex: index });\r\n            }}\r\n            selectedTabIndex={this.state.selectedTabIndex}\r\n            tabs={tabs}\r\n            >\r\n\r\n            {/*<span>{tabs[this.state.selectedTabIndex].content} panel content</span>*/}\r\n            {panels[this.state.selectedTabIndex]}\r\n            </Tabs>\r\n\r\n            <br/>\r\n\r\n            {/*<LineDropdown listData={list01} title='Please select worksheet' />\r\n            <br/>\r\n            <br/>\r\n            <RadioButton radioData={radioList} radioTitle='Dollar Sign?'/>*/}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfigDialog\r\n\r\n"]},"metadata":{},"sourceType":"module"}