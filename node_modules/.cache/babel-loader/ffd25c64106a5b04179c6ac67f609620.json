{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtsui\\\\Documents\\\\My Github Projects\\\\tableau-ui-test\\\\src\\\\ConfigDialog.js\";\nimport React from 'react';\nimport LineDropdown from './LineDropdown.js';\nimport RadioButton from './RadioButton.js';\nimport TabsLeftAlign from './TabsLeftAlign.js';\nlet radioList = ['Yes', 'No'];\nlet list01 = [{\n  value: 'alpha'\n}, {\n  value: 'bravo'\n}, {\n  value: 'charlie'\n}, {\n  value: 'delta'\n}, {\n  value: 'zebra'\n}];\n\nclass ConfigDialog extends React.Component {\n  componentWillMount() {\n    try {\n      window.tableau.extensions.initializeDialogAsync().then(() => {\n        console.log('Debug: component will mount.');\n      });\n    } catch (err) {\n      console.log('window.tableau.extensions did not load');\n    }\n  }\n\n  componentDidMount() {\n    console.log('Debug: component did mount');\n  }\n\n  getWorksheetList() {\n    console.log('Running getWorksheetList function.');\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Tableau Extension D3 Sankey Diagram ConfigDialog.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(TabsLeftAlign, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(LineDropdown, {\n      listData: list01,\n      title: \"Please select worksheet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(RadioButton, {\n      radioData: radioList,\n      radioTitle: \"Dollar Sign?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ConfigDialog;\n/*\r\nimport React from 'react';\r\nimport { Pill } from '@tableau/tableau-ui'\r\nimport { DropdownSelect } from '@tableau/tableau-ui'\r\n\r\nconst items = [\r\n    { value: 'alpha'},\r\n    { value: 'bravo'},\r\n    { value: 'charlie'},\r\n    { value: 'delta'},\r\n    { value: 'echo'}\r\n]\r\n\r\nconst makeDefaultOption = (strInput, index) =>\r\n    <option disabled selected=\"selected\">{strInput}</option>\r\n\r\nconst makeOption = (item, index) => \r\n    <option disabled={item.disabled || item.separator} key={index} value={item.value}>{item.value}</option>;\r\n\r\n\r\nclass ConfigDialog extends React.Component {\r\n    render() {\r\n        return(\r\n            <>\r\n            <h1>Tableau Extension D3 Sankey Diagram ConfigDialog.</h1>\r\n\r\n            <div style={{width: 150}}>\r\n                <Pill kind='discrete'>Discrete</Pill><br/>\r\n                <Pill kind='continuous'>Continuous</Pill><br/>\r\n                <Pill kind='other'>Other</Pill><br/>\r\n                <Pill kind='invalid'>Invalid</Pill><br/>\r\n            </div>\r\n\r\n            <DropdownSelect kind='line'>\r\n                {makeDefaultOption('Please select dimension')}\r\n                {items.map(makeOption)}\r\n            </DropdownSelect>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfigDialog\r\n\r\n*/","map":{"version":3,"sources":["C:\\Users\\mtsui\\Documents\\My Github Projects\\tableau-ui-test\\src\\ConfigDialog.js"],"names":["React","LineDropdown","RadioButton","TabsLeftAlign","radioList","list01","value","ConfigDialog","Component","componentWillMount","window","tableau","extensions","initializeDialogAsync","then","console","log","err","componentDidMount","getWorksheetList","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,IAAIC,SAAS,GAAG,CAAC,KAAD,EAAQ,IAAR,CAAhB;AAEA,IAAIC,MAAM,GAAG,CACT;AAAEC,EAAAA,KAAK,EAAE;AAAT,CADS,EAET;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAFS,EAGT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAHS,EAIT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAJS,EAKT;AAAEA,EAAAA,KAAK,EAAE;AAAT,CALS,CAAb;;AAQA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AAEvCC,EAAAA,kBAAkB,GAAG;AACjB,QAAG;AACCC,MAAAA,MAAM,CAACC,OAAP,CAAeC,UAAf,CAA0BC,qBAA1B,GAAkDC,IAAlD,CAAuD,MAAM;AACzDC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,OAFD;AAGH,KAJD,CAKA,OAAMC,GAAN,EAAU;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACH;AACJ;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH;;AAEDG,EAAAA,gBAAgB,GAAE;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,EAMA,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEf,MAAxB;AAAgC,MAAA,KAAK,EAAC,yBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,EASA,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAED,SAAxB;AAAmC,MAAA,UAAU,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,CADJ;AAaH;;AAnCsC;;AAsC3C,eAAeG,YAAf;AAEA","sourcesContent":["import React from 'react';\r\nimport LineDropdown from './LineDropdown.js'\r\nimport RadioButton from './RadioButton.js'\r\nimport TabsLeftAlign from './TabsLeftAlign.js'\r\n\r\nlet radioList = ['Yes', 'No'];\r\n\r\nlet list01 = [\r\n    { value: 'alpha'},\r\n    { value: 'bravo'},\r\n    { value: 'charlie'},\r\n    { value: 'delta'},\r\n    { value: 'zebra'}\r\n];\r\n\r\nclass ConfigDialog extends React.Component {\r\n\r\n    componentWillMount() {\r\n        try{\r\n            window.tableau.extensions.initializeDialogAsync().then(() => {\r\n                console.log('Debug: component will mount.');\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log('window.tableau.extensions did not load');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Debug: component did mount');\r\n    }\r\n\r\n    getWorksheetList(){\r\n        console.log('Running getWorksheetList function.');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <h1>Tableau Extension D3 Sankey Diagram ConfigDialog.</h1>\r\n\r\n            <br/>\r\n            <TabsLeftAlign />\r\n            <br/>\r\n            <LineDropdown listData={list01} title='Please select worksheet' />\r\n            <br/>\r\n            <br/>\r\n            <RadioButton radioData={radioList} radioTitle='Dollar Sign?'/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfigDialog\r\n\r\n/*\r\nimport React from 'react';\r\nimport { Pill } from '@tableau/tableau-ui'\r\nimport { DropdownSelect } from '@tableau/tableau-ui'\r\n\r\nconst items = [\r\n    { value: 'alpha'},\r\n    { value: 'bravo'},\r\n    { value: 'charlie'},\r\n    { value: 'delta'},\r\n    { value: 'echo'}\r\n]\r\n\r\nconst makeDefaultOption = (strInput, index) =>\r\n    <option disabled selected=\"selected\">{strInput}</option>\r\n\r\nconst makeOption = (item, index) => \r\n    <option disabled={item.disabled || item.separator} key={index} value={item.value}>{item.value}</option>;\r\n\r\n\r\nclass ConfigDialog extends React.Component {\r\n    render() {\r\n        return(\r\n            <>\r\n            <h1>Tableau Extension D3 Sankey Diagram ConfigDialog.</h1>\r\n\r\n            <div style={{width: 150}}>\r\n                <Pill kind='discrete'>Discrete</Pill><br/>\r\n                <Pill kind='continuous'>Continuous</Pill><br/>\r\n                <Pill kind='other'>Other</Pill><br/>\r\n                <Pill kind='invalid'>Invalid</Pill><br/>\r\n            </div>\r\n\r\n            <DropdownSelect kind='line'>\r\n                {makeDefaultOption('Please select dimension')}\r\n                {items.map(makeOption)}\r\n            </DropdownSelect>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfigDialog\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}